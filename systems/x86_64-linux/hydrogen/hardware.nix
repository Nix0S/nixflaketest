# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "uas" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/802cdbf7-3375-42c2-a4a2-41f016d7c495";
      fsType = "btrfs";
      options = [ "subvol=@" "compress-force=zstd:1" "noatime" ];
    };

  boot.initrd.luks.devices."enc".device = "/dev/disk/by-uuid/4fbdcac8-3b9f-48dc-b5cf-0480eebfa95e";

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/802cdbf7-3375-42c2-a4a2-41f016d7c495";
      fsType = "btrfs";
      options = [ "subvol=@home" "compress-force=zstd:1" "noatime" ];
    };

  fileSystems."/.swap" =
    { device = "/dev/disk/by-uuid/802cdbf7-3375-42c2-a4a2-41f016d7c495";
      fsType = "btrfs";
      options = [ "subvol=@swap" "nodatacow" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/.snapshots" =
    { device = "/dev/disk/by-uuid/802cdbf7-3375-42c2-a4a2-41f016d7c495";
      fsType = "btrfs";
      options = [ "subvol=@snapshots" "compress-force=zstd:1" "noatime" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/C009-5D9C";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # high-resolution display
  hardware.video.hidpi.enable = true;

  hardware.opengl.enable = true;

  hardware.bluetooth.enable = true;
  
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0f3u1u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
